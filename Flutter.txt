1.Create an application in flutter to implement Text widget.
import 'package:flutter/material.dart';
void main() {
 runApp(MaterialApp(
 debugShowCheckedModeBanner: false,
 home: Scaffold(
 appBar: AppBar(
 title: const Text("heading ",
 textAlign: TextAlign.center ,
 style: TextStyle(fontSize: 43,
 fontWeight: FontWeight.bold,
 backgroundColor: Colors.deepOrangeAccent,
 color: Colors.teal),
 ),
 backgroundColor: Colors.amberAccent,
 centerTitle: true,
 ),
 )
 ));
}
===========================

2.Create an application in flutter to implement TextButton widget.

import 'package:flutter/material.dart';
void main() {
 runApp(MaterialApp(
 home: Scaffold(
 appBar: AppBar(
 title: const Text("hello there** ",
 textAlign: TextAlign.center ,
 style: TextStyle(fontSize: 43,
 fontWeight: FontWeight.bold,
 backgroundColor: Colors.deepOrangeAccent,
 color: Colors.teal),
 ),
 backgroundColor: Colors.amberAccent,
 centerTitle: true,
 
 ),
 body: TextButton(
child: const Text("click"),
 onPressed: (){ print("on pressed function is working");},
 
 ), ),
 ));
}

=================================================

3.Create an application in flutter to implement Centre, Container, and Column 
widget.

import 'package:flutter/material.dart';
void main() {
 runApp(MaterialApp(
 home: Scaffold(
 appBar: AppBar(
 title: const Text("hello there**",
 textAlign: TextAlign.center ,
 style: TextStyle(fontSize: 43,
 fontWeight: FontWeight.bold,
 backgroundColor: Colors.deepOrangeAccent,
 color: Colors.teal),
 overflow: TextOverflow.ellipsis,
 selectionColor: Colors.black12,),
 backgroundColor: Colors.amberAccent,
 centerTitle: true,
 ),
 body:
 Center(
 child: Column(
 mainAxisAlignment: MainAxisAlignment.spaceEvenly,
 children: [
 Container(child: Center(
 child: Text("apple", 
 style:TextStyle(
 fontSize: 25.0,
 fontWeight: FontWeight.bold,
 )),
 ),
 height:200.0,
 width:400.0,
 color:Colors.tealAccent),
 Container(child: Center(
 child: Text("mango",
 style:TextStyle(
 fontSize: 25.0,
 fontWeight: FontWeight.bold,
 ) ),
 ),
 height:200.0,
 width:400.0,
 color:Colors.greenAccent),
 Container(
 child: TextButton(
onPressed:
 ()
 {
 print("fruit");
 },
 child: Center(child: Text("click",
 style:TextStyle(
 fontSize: 25.0,
 fontWeight: FontWeight.bold,)
 ))
 ),
 color: Colors.grey,
 height:200.0,
 width:400.0,
 )
 ],
 ),) )
 ));
}

=======================================================

4.Create an application in flutter to add two numbers and print the addition on 
Text widget.

import 'package:flutter/material.dart';
void main() => runApp(const MyApp());
class MyApp extends StatelessWidget {
 const MyApp({super.key});
 @override
 Widget build(BuildContext context) {
 return const MaterialApp(
 home: MyCustomForm(),
 );}}
class MyCustomForm extends StatefulWidget {
 const MyCustomForm({super.key});
 @override
 State<MyCustomForm> createState() => _MyCustomFormState();
}
class _MyCustomFormState extends State<MyCustomForm> {
 final myController = TextEditingController();
 final myController1 = TextEditingController();
 @override
 void dispose() {
 myController.dispose();
 super.dispose();}
 int total=0;
 void sum()
 {
 setState(() {
 int a = int.parse(myController.text);
 int b = int.parse(myController1.text);
 total = a + b;
 });}
 @override
 Widget build(BuildContext context) {
 return Scaffold(
 appBar: AppBar(
 title: const Text('print sum'),),
 body: Column(
 children: [
 Padding(
 padding: const EdgeInsets.all(16),
 child: TextField(
 controller: myController,
 keyboardType: TextInputType.number,
 ),),
 Padding(
 padding: const EdgeInsets.all(16),
 child: TextField(
controller: myController1,
 ),),
 Padding(
 padding: const EdgeInsets.all(16),
 child: Text( '$total'
 ),),],),
 floatingActionButton: FloatingActionButton(
 onPressed: () {sum();},
 child: const Icon(Icons.add_circle),
 ),);}}

===========================================

5.Create an application in flutter to print the greetings to the user. ( take input 
in TextField)

import 'package:flutter/material.dart';
void main() => runApp(const MyApp());
class MyApp extends StatelessWidget {
 const MyApp({super.key});
 @override
 Widget build(BuildContext context) {
 return const MaterialApp(
 home: MyCustomForm(),
 );}}
 class MyCustomForm extends StatefulWidget {
 const MyCustomForm({super.key});
 @override
 State<MyCustomForm> createState() => _MyCustomFormState();
}
class _MyCustomFormState extends State<MyCustomForm> {
 final name=TextEditingController();
 var value='';
 void greet()
 {
 setState(() {
 var a=name.text;
 value='Good Morning $a';
 });
 }
 Widget build(BuildContext context) {
 return Scaffold(
 appBar: AppBar(
 title: const Text('GREETINGS'),),
 
body:
 Column(
 children: [
 Padding(
 padding: const EdgeInsets.all(16.0),
 child: TextField(
 controller: name,
 ),),
 TextButton(onPressed:(){greet();},
 child: Text("Click")),
 Text("$value")
],
 )
 ) ;
}}

6.Create a calculator in flutter. (Operations â€“ addition, subtraction, 
multiplication, division.)
import 'package:flutter/material.dart';
void main() => runApp(const MyApp());
class MyApp extends StatelessWidget {
 const MyApp({super.key});
 @override
 Widget build(BuildContext context) {
 return const MaterialApp(
 home: MyCustomForm(),
 );}}
class MyCustomForm extends StatefulWidget {
 const MyCustomForm({super.key});
 @override
 State<MyCustomForm> createState() => _MyCustomFormState();
}
class _MyCustomFormState extends State<MyCustomForm> {
 final myController = TextEditingController();
 final myController1 = TextEditingController();
 @override
 void dispose() {
 myController.dispose();
 super.dispose();}
 int total=0;
 void sum()
 {
 setState(() {
 int a = int.parse(myController.text);
 int b = int.parse(myController1.text);
 total = a + b;
 });}
 void sub()
 {
 setState(() {
 int a = int.parse(myController.text);
 int b = int.parse(myController1.text);
 total = a - b;
 });}
 void mul()
 {
 setState(() {
 int a = int.parse(myController.text);
 int b = int.parse(myController1.text);
 total = a * b;
 });}
 void div()
{
 setState(() {
 int a = int.parse(myController.text);
 int b = int.parse(myController1.text);
 total = a ~/ b;
 });}
 @override
 Widget build(BuildContext context) {
 return Scaffold(
 appBar: AppBar(
 title: const Text('print sum'),),
 body: Column(
 children: [
 Padding(
 padding: const EdgeInsets.all(16),
 child: TextField(
 controller: myController,
 keyboardType: TextInputType.number,
 ),),
 Padding(
 padding: const EdgeInsets.all(16),
 child: TextField(
 controller: myController1,
 ),),
 Padding(
 padding: const EdgeInsets.all(16),
 child: Text( '$total'
 ),),
 Padding(
 padding: const EdgeInsets.all(16),
 child: Row(
 children: [
 TextButton(
 onPressed: (){sum();},
 child: Text("+",
 style:TextStyle(fontSize: 20))
 ),
 TextButton(
 onPressed: (){sub();},
 child: Text("-",
 style:TextStyle(fontSize: 20))
 ),
 TextButton(
 onPressed: (){mul();},
 child: Text("*",
 style:TextStyle(fontSize: 20))
 ),
TextButton(
 onPressed: (){div();},
 child: Text("/",
 style:TextStyle(fontSize: 20))
 ),
 ],
 ),
 ),
 ],),
 );}}
=================================================

7.Create an application in flutter to print the factorial on the screen of the input value. 
(take input in TextField)

import 'package:flutter/material.dart';

void main() {
  runApp(FactorialApp());
}

class FactorialApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: FactorialScreen(),
    );
  }
}

class FactorialScreen extends StatefulWidget {
  @override
  _FactorialScreenState createState() => _FactorialScreenState();
}

class _FactorialScreenState extends State<FactorialScreen> {
  TextEditingController _inputController = TextEditingController();
  int _result = 1;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Factorial Calculator'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _inputController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter a number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  calculateFactorial();
                },
                child: Text('Calculate Factorial'),
              ),
              SizedBox(height: 20),
              Text('Factorial: $_result'),
            ],
          ),
        ),
      ),
    );
  }

  void calculateFactorial() {
    int number = int.tryParse(_inputController.text) ?? 0;
    int factorial = 1;

    for (int i = 1; i <= number; i++) {
      factorial *= i;
    }

    setState(() {
      _result = factorial;
    });
  }

  @override
  void dispose() {
    _inputController.dispose();
    super.dispose();
  }
}

==========================================

8. Create an application in flutter to print whether the number is even or odd on the 
screen. (take input in TextField)


import 'package:flutter/material.dart';

void main() {
  runApp(EvenOddApp());
}

class EvenOddApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: EvenOddScreen(),
    );
  }
}

class EvenOddScreen extends StatefulWidget {
  @override
  _EvenOddScreenState createState() => _EvenOddScreenState();
}

class _EvenOddScreenState extends State<EvenOddScreen> {
  TextEditingController _inputController = TextEditingController();
  String _result = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Even/Odd Checker'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _inputController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter a number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  checkEvenOrOdd();
                },
                child: Text('Check Even/Odd'),
              ),
              SizedBox(height: 20),
              Text('Result: $_result'),
            ],
          ),
        ),
      ),
    );
  }

  void checkEvenOrOdd() {
    int number = int.tryParse(_inputController.text) ?? 0;
    setState(() {
      _result = (number % 2 == 0) ? 'Even' : 'Odd';
    });
  }

  @override
  void dispose() {
    _inputController.dispose();
    super.dispose();
  }
}

=========================================

9. Create an application in flutter to implement Icon, Row and Column widget.

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Icon, Row, and Column Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Icon(
              Icons.star,
              size: 100.0,
              color: Colors.amber,
            ),
            SizedBox(height: 20.0),
            Text(
              'Hello, Flutter!',
              style: TextStyle(fontSize: 24.0),
            ),
            SizedBox(height: 20.0),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Icon(Icons.favorite, size: 50.0, color: Colors.red),
                Icon(Icons.favorite, size: 50.0, color: Colors.red),
              ],
            ),
          ],
        ),
      ),
    );
  }
}


============================================

10. Create an application in flutter to print whether the number is positive, negative or 
zero. (take input in TextField)

import 'package:flutter/material.dart';

void main() {
  runApp(NumberCheckApp());
}

class NumberCheckApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: NumberCheckScreen(),
    );
  }
}

class NumberCheckScreen extends StatefulWidget {
  @override
  _NumberCheckScreenState createState() => _NumberCheckScreenState();
}

class _NumberCheckScreenState extends State<NumberCheckScreen> {
  TextEditingController _inputController = TextEditingController();
  String _result = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Number Checker'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _inputController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter a number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  checkNumber();
                },
                child: Text('Check Number'),
              ),
              SizedBox(height: 20),
              Text('Result: $_result', style: TextStyle(fontSize: 20)),
            ],
          ),
        ),
      ),
    );
  }

  void checkNumber() {
    int number = int.tryParse(_inputController.text) ?? 0;
    if (number > 0) {
      setState(() {
        _result = 'Positive';
      });
    } else if (number < 0) {
      setState(() {
        _result = 'Negative';
      });
    } else {
      setState(() {
        _result = 'Zero';
      });
    }
  }

  @override
  void dispose() {
    _inputController.dispose();
    super.dispose();
  }
}

=========================================

11.Create an application in flutter to subtract two numbers and print the value on the 
screen. (take input in TextField)

import 'package:flutter/material.dart';

void main() {
  runApp(SubtractionApp());
}

class SubtractionApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SubtractionScreen(),
    );
  }
}

class SubtractionScreen extends StatefulWidget {
  @override
  _SubtractionScreenState createState() => _SubtractionScreenState();
}

class _SubtractionScreenState extends State<SubtractionScreen> {
  TextEditingController _firstNumberController = TextEditingController();
  TextEditingController _secondNumberController = TextEditingController();
  String _result = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Subtraction App'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _firstNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the first number'),
              ),
              TextField(
                controller: _secondNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the second number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  subtractNumbers();
                },
                child: Text('Subtract Numbers'),
              ),
              SizedBox(height: 20),
              Text('Result: $_result', style: TextStyle(fontSize: 20)),
            ],
          ),
        ),
      ),
    );
  }

  void subtractNumbers() {
    int firstNumber = int.tryParse(_firstNumberController.text) ?? 0;
    int secondNumber = int.tryParse(_secondNumberController.text) ?? 0;

    int result = firstNumber - secondNumber;

    setState(() {
      _result = 'Result: $result';
    });
  }

  @override
  void dispose() {
    _firstNumberController.dispose();
    _secondNumberController.dispose();
    super.dispose();
  }
}
=================================================

12. Create an application in flutter to multiply two numbers and print the value on the 
screen. (take input in TextField)

import 'package:flutter/material.dart';

void main() {
  runApp(MultiplicationApp());
}

class MultiplicationApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: MultiplicationScreen(),
    );
  }
}

class MultiplicationScreen extends StatefulWidget {
  @override
  _MultiplicationScreenState createState() => _MultiplicationScreenState();
}

class _MultiplicationScreenState extends State<MultiplicationScreen> {
  TextEditingController _firstNumberController = TextEditingController();
  TextEditingController _secondNumberController = TextEditingController();
  String _result = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Multiplication App'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _firstNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the first number'),
              ),
              TextField(
                controller: _secondNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the second number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  multiplyNumbers();
                },
                child: Text('Multiply Numbers'),
              ),
              SizedBox(height: 20),
              Text('Result: $_result', style: TextStyle(fontSize: 20)),
            ],
          ),
        ),
      ),
    );
  }

  void multiplyNumbers() {
    int firstNumber = int.tryParse(_firstNumberController.text) ?? 0;
    int secondNumber = int.tryParse(_secondNumberController.text) ?? 0;

    int result = firstNumber * secondNumber;

    setState(() {
      _result = 'Result: $result';
    });
  }

  @override
  void dispose() {
    _firstNumberController.dispose();
    _secondNumberController.dispose();
    super.dispose();
  }
}

========================================

13. import 'package:flutter/material.dart';

void main() {
  runApp(DivisionApp());
}

class DivisionApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: DivisionScreen(),
    );
  }
}

class DivisionScreen extends StatefulWidget {
  @override
  _DivisionScreenState createState() => _DivisionScreenState();
}

class _DivisionScreenState extends State<DivisionScreen> {
  TextEditingController _firstNumberController = TextEditingController();
  TextEditingController _secondNumberController = TextEditingController();
  String _result = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Division App'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                controller: _firstNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the first number'),
              ),
              TextField(
                controller: _secondNumberController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: 'Enter the second number'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  divideNumbers();
                },
                child: Text('Divide Numbers'),
              ),
              SizedBox(height: 20),
              Text('Result: $_result', style: TextStyle(fontSize: 20)),
            ],
          ),
        ),
      ),
    );
  }

  void divideNumbers() {
    double firstNumber = double.tryParse(_firstNumberController.text) ?? 0;
    double secondNumber = double.tryParse(_secondNumberController.text) ?? 1;

    if (secondNumber == 0) {
      setState(() {
        _result = 'Error: Division by zero';
      });
    } else {
      double result = firstNumber / secondNumber;
      setState(() {
        _result = 'Result: $result';
      });
    }
  }

  @override
  void dispose() {
    _firstNumberController.dispose();
    _secondNumberController.dispose();
    super.dispose();
  }
}
---------------------------------------